{
	"info": {
		"_postman_id": "c715a9a3-c7be-450a-8038-e83379ec81d1",
		"name": "Simple App API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31088125"
	},
	"item": [
		{
			"name": "Login - Valid Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"logs in successfully with valid credentials\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"  pm.expect(pm.response.json().message).to.eql(\"Login successful\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"AdminPass1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Item - Valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Item created successfully\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(201);\r",
							"  pm.expect(pm.response.json().text).to.eql(\"New Item from Postman\");\r",
							"\r",
							"  // Save the ID for later\r",
							"  pm.collectionVariables.set(\"item_id\", pm.response.json().id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"text\": \"New Item from Postman\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Item - Invalid (Empty Text)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should reject empty item text\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"text\": \"   \"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login - Invalid Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"shows error on invalid credentials\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(401);\r",
							"  pm.expect(pm.response.json().message).to.eql(\"Invalid credentials\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"incorrectpass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should retrieve all items\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"  pm.expect(Array.isArray(pm.response.json())).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Item should update\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"  pm.expect(pm.response.json().text).to.eql(\"Updated text from Postman\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"text\": \"Updated text from Postman\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/items/{{item_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"items",
						"{{item_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Item should be deleted\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/items/{{item_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"items",
						"{{item_id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "item_id",
			"value": ""
		}
	]
}